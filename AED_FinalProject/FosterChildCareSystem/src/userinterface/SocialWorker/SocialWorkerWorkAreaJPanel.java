/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SocialWorker;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.FosterChild.FosterChild;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FosterAChildWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shiva
 */
public class SocialWorkerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SocialWorkerWorkAreaJPanel
     */
   JPanel userProcessContainer;
    Enterprise enterprise;
    EcoSystem system;
    Network network;
    UserAccount account;
    Organization organization;
    public SocialWorkerWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.system = system;
        this.network = network;
        this.enterprise = enterprise;
        this.organization = organization;
        this.PopulateData();
    }
    
    public void PopulateData(){
        DefaultTableModel model = (DefaultTableModel)AssignChildtable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest wq: system.getWorkQueue().getWorkRequestList()){
            
            if(wq.getClass() == FosterAChildWorkRequest.class){
                Object[] row = new Object[model.getColumnCount()];
                FosterAChildWorkRequest facwq = (FosterAChildWorkRequest)wq;
                row[0] = facwq.getReqId();
                row[1] = facwq.getParent().getName();
                row[2] = facwq.getChild().getName();
                row[3] = facwq.getStatus();
               ((DefaultTableModel) AssignChildtable.getModel()).addRow(row);
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        AssignChildtable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Assignchildbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 229, 180));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AssignChildtable.setFont(new java.awt.Font("Segoe Print", 0, 11)); // NOI18N
        AssignChildtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Id", "Parent", "Child", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AssignChildtable);
        if (AssignChildtable.getColumnModel().getColumnCount() > 0) {
            AssignChildtable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 170, 520, 93));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabel1.setText("Assigning Child to Parent");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 250, -1));

        Assignchildbtn.setFont(new java.awt.Font("Segoe Print", 0, 11)); // NOI18N
        Assignchildbtn.setText("Assign Child");
        Assignchildbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignchildbtnActionPerformed(evt);
            }
        });
        add(Assignchildbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 310, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/SocialWorker/hands.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, -30, 730, 750));
    }// </editor-fold>//GEN-END:initComponents

    private void AssignchildbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignchildbtnActionPerformed
        // TODO add your handling code here:
        
        int selectedrow = AssignChildtable.getSelectedRow();
        
        if(selectedrow >=0){
            DefaultTableModel tableRecords = (DefaultTableModel)AssignChildtable.getModel();
            int id = (int)tableRecords.getValueAt(selectedrow, 0);
            
            for(WorkRequest wq: system.getWorkQueue().getWorkRequestList()){
                if(wq.getReqId()==id){
                    FosterAChildWorkRequest fwq= (FosterAChildWorkRequest)wq;
                    fwq.child.IsAdopted = true;
                    fwq.setStatus("Approved by the Social Worker");
                }
            }
            JOptionPane.showMessageDialog(null,"Child has been assigned to the requested parent.");
            PopulateData();
        }
    }//GEN-LAST:event_AssignchildbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AssignChildtable;
    private javax.swing.JButton Assignchildbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
